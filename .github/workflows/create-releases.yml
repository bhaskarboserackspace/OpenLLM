# Copyright 2023 BentoML Team. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        type: choice
        default: 'patch'
        options:
          - major
          - minor
          - patch
env:
  # This special value tells pypi that the user identity is supplied within the token
  HATCH_INDEX_USER: __token__
  # Note, the PYPI_API_TOKEN is for the OpenLLM PyPI user, on
  # https://github.com/bentoml/openllm/settings/secrets/actions
  HATCH_INDEX_AUTH: ${{ secrets.PYPI_API_TOKEN }}
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrun
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}
jobs:
  release:
    if: github.repository_owner == 'bentoml'
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup CI
        uses: ./.github/actions/setup-repo
        with:
          python-version: '3.11'
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true
      - name: Install jq and curl
        run: sudo apt-get install -y jq curl
      - name: Create a release
        env:
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        run: |
          git config --global http.postBuffer 524288000
          git config --global user.name "${{ steps.import-gpg.outputs.name }}"
          git config --global user.email "${{ steps.import-gpg.outputs.email }}"
          ./.github/actions/release.sh --release ${{ inputs.release_type }}
      - name: Set project version
        id: version
        run: |-
          version="$(hatch version)"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "$version"
  binary-distribution:
    if: github.repository_owner == 'bentoml'
    needs: release
    name: Create binary/wheels distribution
    uses: bentoml/OpenLLM/.github/workflows/binary-releases.yml@main
  prepare-for-dev-cycle:
    if: github.repository_owner == 'bentoml'
    needs:
      - release
      - binary-distribution
    name: Create release notes and setup for next cycle
    uses: bentoml/OpenLLM/.github/workflows/release-notes.yml@main
    with:
      tags: ${{ needs.release.outputs.version }}
